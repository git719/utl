#!/bin/bash
# prepublish
# Tidy up and run checks before publishing

set -euo pipefail  # Fail on any error
case "$OSTYPE" in
    "linux-gnu"* ) echo "==> OS = Linux" ;;
    "darwin"* ) echo "==> OS = macOS" ;;
    "msys"* ) echo "==> OS = GitBASH Windows" ;;
    * ) printf "==> OS = \"$OSTYPE\", unknown! (Options are Linux, macOS, or GitBASH on Windows)\n"
esac

printf "==> Following below practice:\n"
printf "    Publishing => https://go.dev/doc/modules/publishing (Not running list cmd to make mod fully available.)\n"
printf "    Versioning => https://go.dev/doc/modules/version-numbers\n"

printf "==> Running go mod tidy\n"
go mod tidy
printf "==> Running go test ./... (fix any errors that my appear below)\n"
go test ./...

printf "\n==> Good to go! To publish, now do one of these:\n\n"
printf "P=mymod && T=v0.1.1 && git add . && git commit -m \"\$P: updates \$T\" && git tag \$T && git push origin \$T && git push\n\n"
printf "or\n\n"
printf "git add .\n"
printf "git commit -m \"mymod: updates v0.1.0\n"
printf "git tag v0.1.0\n"
printf "git push origin v0.1.0\n"
printf "git push\n\n"
